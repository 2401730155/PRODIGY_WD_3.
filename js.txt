Perfect! Let's enhance your Weather App with:

1. âœ… Automatic location detection (using navigator.geolocation)


2. âœ… Mobile responsive layout (using CSS media queries)




---

âœ… Updated Project Files

ðŸ”¹ index.html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Weather App</title>
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <div class="weather-container">
    <h1>ðŸŒ¤ Weather App</h1>

    <input type="text" id="city-input" placeholder="Enter city name">
    <button onclick="getWeatherByCity()">Get Weather</button>
    <button onclick="getWeatherByLocation()">Use My Location</button>

    <div id="weather-info"></div>
  </div>

  <script src="script.js"></script>
</body>
</html>


---

ðŸ”¹ style.css (Responsive Design)

body {
  margin: 0;
  font-family: 'Segoe UI', sans-serif;
  background: linear-gradient(to right, #2980b9, #6dd5fa, #ffffff);
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  color: #333;
}

.weather-container {
  background: rgba(255, 255, 255, 0.85);
  padding: 30px;
  border-radius: 15px;
  text-align: center;
  width: 90%;
  max-width: 400px;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
}

input, button {
  padding: 10px;
  margin: 10px 5px;
  border-radius: 8px;
  border: 1px solid #aaa;
  font-size: 16px;
}

button {
  background-color: #2980b9;
  color: white;
  cursor: pointer;
}

button:hover {
  background-color: #21618c;
}

/* Responsive */
@media screen and (max-width: 500px) {
  .weather-container {
    padding: 20px;
  }

  input, button {
    width: 100%;
    margin: 10px 0;
  }
}


---

ðŸ”¹ script.js (With Auto Location Feature)

const apiKey = "YOUR_API_KEY"; // Replace with your OpenWeatherMap API key

function displayWeather(data) {
  const weatherInfo = document.getElementById("weather-info");
  if (data.cod === 200) {
    weatherInfo.innerHTML = `
      <h2>${data.name}, ${data.sys.country}</h2>
      <p><strong>Weather:</strong> ${data.weather[0].description}</p>
      <p><strong>Temperature:</strong> ${data.main.temp}Â°C</p>
      <p><strong>Humidity:</strong> ${data.main.humidity}%</p>
      <p><strong>Wind Speed:</strong> ${data.wind.speed} m/s</p>
    `;
  } else {
    weatherInfo.innerHTML = `<p style="color:red;">${data.message}</p>`;
  }
}

function getWeatherByCity() {
  const city = document.getElementById("city-input").value.trim();
  if (!city) return alert("Please enter a city name.");
  
  fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`)
    .then(res => res.json())
    .then(displayWeather)
    .catch(() => {
      document.getElementById("weather-info").innerHTML = `<p style="color:red;">Unable to fetch weather.</p>`;
    });
}

function getWeatherByLocation() {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(position => {
      const { latitude, longitude } = position.coords;
      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`)
        .then(res => res.json())
        .then(displayWeather)
        .catch(() => {
          document.getElementById("weather-info").innerHTML = `<p style="color:red;">Failed to get weather.</p>`;
        });
    }, () => {
      alert("Location access denied.");
    });
  } else {
    alert("Geolocation is not supported by this browser.");
  }
}


---

ðŸ”‘ Setup Steps:

1. Go to https://openweathermap.org/api


2. Create an account â†’ Get your free API key


3. Replace "YOUR_API_KEY" with your actual key




---

Would you like:

Weather icons next to conditions?

A loader animation while fetching?

Saving user preferences in local storage?


Let me know!

